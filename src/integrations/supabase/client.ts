
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://ssrfjakurvpcshbesvyf.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNzcmZqYWt1cnZwY3NoYmVzdnlmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDU5NDEzMTMsImV4cCI6MjA2MTUxNzMxM30.bIXSMU37FC_Q8xjYodSTARBF_izCeD9_HCk_Tgn-wNQ";

// Performance optimizations for the Supabase client
const clientOptions = {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    storage: typeof window !== 'undefined' ? localStorage : undefined
  },
  global: {
    // Disable real-time subscriptions by default to reduce connection overhead
    realtime: false
  },
  // Add request timeout to prevent hanging requests
  db: {
    schema: 'public'
  }
};

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";
export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, clientOptions);

// Helper function to check if a Supabase response contains an error
export function hasError(response: any): boolean {
  return response && response.error !== undefined;
}

// Helper function to safely access data from a Supabase response
export function safeData<T>(response: any, defaultValue: T): T {
  if (hasError(response) || !response || !response.data) {
    return defaultValue;
  }
  return response.data;
}
