// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://haerycvffegaotiztdmu.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhhZXJ5Y3ZmZmVnYW90aXp0ZG11Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTE0MjEyNzgsImV4cCI6MjA2Njk5NzI3OH0.UBHG87EkAoUWT8DczMk2vMuFAD15zDQucU3gOO6F24c";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});

// Helper functions for common operations
export const checkAuthSession = async () => {
  try {
    const { data: { session }, error } = await supabase.auth.getSession();
    return { session, error };
  } catch (error) {
    return { session: null, error };
  }
};

export const signOut = async () => {
  try {
    const { error } = await supabase.auth.signOut();
    return { error };
  } catch (error) {
    return { error };
  }
};

export const hasError = (response: any) => {
  return response?.error !== null && response?.error !== undefined;
};

export const safeData = (response: any, fallback: any = null) => {
  return response?.data ?? fallback;
};